import React, { useState, useEffect } from "react";

const departments = [
  { value: "finance", label: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç–¥–µ–ª" },
  { value: "sales", label: "–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂" },
  { value: "marketing", label: "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –æ—Ç–¥–µ–ª" },
  { value: "it", label: "IT-–æ—Ç–¥–µ–ª" },
  { value: "hr", label: "HR-–æ—Ç–¥–µ–ª" },
  { value: "legal", label: "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª" },
  { value: "rnd", label: "–û—Ç–¥–µ–ª –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–æ–∫ (R&D)" },
  { value: "production", label: "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–¥–µ–ª" },
  { value: "logistics", label: "–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª" },
  { value: "procurement", label: "–û—Ç–¥–µ–ª –∑–∞–∫—É–ø–æ–∫" },
  { value: "customer_support", label: "–û—Ç–¥–µ–ª –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏" },
  { value: "quality", label: "–û—Ç–¥–µ–ª –∫–∞—á–µ—Å—Ç–≤–∞" },
  { value: "admin", label: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –æ—Ç–¥–µ–ª" },
  { value: "pr", label: "PR-–æ—Ç–¥–µ–ª" },
  { value: "internal_audit", label: "–û—Ç–¥–µ–ª –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∞—É–¥–∏—Ç–∞" },
  { value: "security", label: "–û—Ç–¥–µ–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏" },
  { value: "risk_management", label: "–û—Ç–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏" },
  { value: "hr_work", label: "–û—Ç–¥–µ–ª –ø–æ —Ä–∞–±–æ—Ç–µ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º" },
  { value: "analytics", label: "–û—Ç–¥–µ–ª –∞–Ω–∞–ª–∏—Ç–∏–∫–∏" },
  { value: "corp_communications", label: "–û—Ç–¥–µ–ª –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π" },
  { value: "project_management", label: "–û—Ç–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏" },
  { value: "export_import", label: "–û—Ç–¥–µ–ª —ç–∫—Å–ø–æ—Ä—Ç–∞ –∏ –∏–º–ø–æ—Ä—Ç–∞" },
  { value: "service", label: "–°–µ—Ä–≤–∏—Å–Ω—ã–π –æ—Ç–¥–µ–ª" },
  { value: "planning", label: "–û—Ç–¥–µ–ª –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è" },
  { value: "operations", label: "–û—Ç–¥–µ–ª —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏" },
  { value: "hse", label: "–û—Ç–¥–µ–ª –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞ –∏ —Ç–µ—Ö–Ω–∏–∫–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏" },
  { value: "logistics_warehousing", label: "–û—Ç–¥–µ–ª –ª–æ–≥–∏—Å—Ç–∏–∫–∏ –∏ —Å–∫–ª–∞–¥–∏—Ä–æ–≤–∞–Ω–∏—è" },
  { value: "foreign_trade", label: "–û—Ç–¥–µ–ª –≤–Ω–µ—à–Ω–µ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–í–≠–î)" },
  { value: "innovation", label: "–û—Ç–¥–µ–ª –∏–Ω–Ω–æ–≤–∞—Ü–∏–π" },
  { value: "supply_chain", label: "–û—Ç–¥–µ–ª –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ü–µ–ø–æ—á–∫–∞–º–∏ –ø–æ—Å—Ç–∞–≤–æ–∫" },
  { value: "asset_management", label: "–û—Ç–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∞–º–∏" },
  { value: "transaction_support", label: "–û—Ç–¥–µ–ª —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è —Å–¥–µ–ª–æ–∫" },
  { value: "quality_control", label: "–û—Ç–¥–µ–ª –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞" }
];

function Calculator() {
  const [selectedDepartment, setSelectedDepartment] = useState("sales");
  const [employees, setEmployees] = useState(50);
  const [salary, setSalary] = useState(250000);
  const [results, setResults] = useState({
    annualSalary: 0,
    efficiency: 20,
    potentialBenefitPerEmployee: 0,
    potentialBenefitAll: 0,
    finalBenefit: 0,
    roi: 0,
    profitStartDate: ""
  });

  const calculateResults = () => {
    const annualSalary = employees * salary * 12;
    const potentialBenefitPerEmployee = salary * 12 * 0.2; // 20% —ç–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏
    const potentialBenefitAll = potentialBenefitPerEmployee * employees;
    const developmentCost = 500000;
    const platformCost = 180000;
    const totalCost = developmentCost + platformCost;
    const finalBenefit = potentialBenefitAll - totalCost;
    const roi = Math.round((finalBenefit / totalCost) * 100);
    
    // –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—ã–≥–æ–¥—ã (—á–µ—Ä–µ–∑ 3 –º–µ—Å—è—Ü–∞)
    const startDate = new Date();
    startDate.setMonth(startDate.getMonth() + 3);
    const profitStartDate = startDate.toLocaleDateString("ru-RU");

    setResults({
      annualSalary,
      efficiency: 20,
      potentialBenefitPerEmployee,
      potentialBenefitAll,
      finalBenefit,
      roi,
      profitStartDate
    });
  };

  useEffect(() => {
    calculateResults();
  }, [employees, salary]);

  const formatNumber = (num) => {
    return new Intl.NumberFormat("ru-RU").format(Math.round(num));
  };

  return (
    <div className="w-full max-w-7xl mx-auto px-4">
      <div className="text-center mb-6">
        <div className="flex items-center justify-center gap-3 mb-4">
          <span className="text-2xl">üßÆ</span>
          <span className="px-4 py-2 bg-blue-500/20 text-blue-500 rounded-full text-sm font-semibold">
            –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —ç–∫–æ–Ω–æ–º–∏–∏
          </span>
        </div>
        <h2 className="text-xl sm:text-2xl md:text-3xl font-bold mb-3 text-gray-800">
          –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –≤—ã–≥–æ–¥—É –æ—Ç –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –ò–ò
        </h2>
        <p className="text-sm sm:text-base text-gray-600">
          –£–∑–Ω–∞–π—Ç–µ, —Å–∫–æ–ª—å–∫–æ –≤–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è —Å—ç–∫–æ–Ω–æ–º–∏—Ç —Å –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º
        </p>
      </div>

      <div className="grid lg:grid-cols-2 gap-6">
        {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <div className="bg-white rounded-2xl p-6 shadow-xl border border-gray-200">
          <h3 className="text-lg font-bold text-gray-800 mb-4">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—á—ë—Ç–∞</h3>
          
          {/* –í—ã–±–æ—Ä –æ—Ç–¥–µ–ª–∞ */}
          <div className="mb-6">
            <label className="block text-sm font-semibold text-gray-800 mb-2">
              –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–∞
            </label>
            <select
              value={selectedDepartment}
              onChange={(e) => setSelectedDepartment(e.target.value)}
              className="w-full p-3 rounded-xl border border-gray-300 bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all"
            >
              {departments.map((dept) => (
                <option key={dept.value} value={dept.value}>
                  {dept.label}
                </option>
              ))}
            </select>
          </div>

          {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ */}
          <div className="mb-6">
            <label className="block text-sm font-semibold text-gray-800 mb-2">
              –ö–æ–ª-–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –æ—Ç–¥–µ–ª–µ: <span className="text-blue-500">{employees}</span>
            </label>
            <div className="relative">
              <input
                type="range"
                min="1"
                max="100"
                value={employees}
                onChange={(e) => setEmployees(Number(e.target.value))}
                className="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer"
              />
              <div className="flex justify-between text-xs text-gray-500 mt-1">
                <span>1</span>
                <span>100</span>
              </div>
            </div>
          </div>

          {/* –ó–∞—Ä–ø–ª–∞—Ç–∞ */}
          <div className="mb-6">
            <label className="block text-sm font-semibold text-gray-800 mb-2">
              –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã –æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ <span className="text-gray-500">(–≤ —Ä—É–±–ª—è—Ö)</span>: <span className="text-blue-500">{formatNumber(salary)}</span>
            </label>
            <div className="relative">
              <input
                type="range"
                min="10000"
                max="500000"
                step="10000"
                value={salary}
                onChange={(e) => setSalary(Number(e.target.value))}
                className="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer"
              />
              <div className="flex justify-between text-xs text-gray-500 mt-1">
                <span>10 000</span>
                <span>500 000</span>
              </div>
            </div>
          </div>

          <button
            onClick={calculateResults}
            className="w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-3 px-6 rounded-xl transition-all transform hover:scale-105 shadow-lg"
          >
            –†–∞—Å—Å—á–∏—Ç–∞—Ç—å
          </button>
        </div>

        {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
        <div className="bg-white rounded-2xl p-6 shadow-xl border border-gray-200">
          <h3 className="text-lg font-bold text-gray-800 mb-4 flex items-center gap-2">
            <span>–†–µ–∑—É–ª—å—Ç–∞—Ç:</span>
          </h3>

          <div className="space-y-4">
            {/* –ì–æ–¥–æ–≤–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞ */}
            <div className="bg-gray-50 rounded-xl p-4">
              <h4 className="text-sm font-semibold text-gray-700 mb-2">–ì–æ–¥–æ–≤–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ—Ç–¥–µ–ª–∞:</h4>
              <div className="flex items-baseline gap-2">
                <span className="text-2xl font-bold text-gray-800">{formatNumber(results.annualSalary)}</span>
                <span className="text-sm text-gray-500">‚ÇΩ/–≥–æ–¥</span>
              </div>
            </div>

            {/* –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ */}
            <div className="bg-blue-50 rounded-xl p-4">
              <h4 className="text-sm font-semibold text-gray-700 mb-2">–≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Å AI-–±–æ—Ç–æ–º:</h4>
              <div className="flex items-baseline gap-2">
                <span className="text-2xl font-bold text-blue-600">{results.efficiency}</span>
                <span className="text-sm text-gray-500">%</span>
              </div>
            </div>

            {/* –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –≤—ã–≥–æ–¥–∞ –Ω–∞ 1 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ */}
            <div className="bg-green-50 rounded-xl p-4">
              <h4 className="text-sm font-semibold text-gray-700 mb-2">–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –≤—ã–≥–æ–¥–∞ –Ω–∞ 1 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å AI-–±–æ—Ç–æ–º, –≤ –≥–æ–¥:</h4>
              <div className="flex items-baseline gap-2">
                <span className="text-2xl font-bold text-green-600">{formatNumber(results.potentialBenefitPerEmployee)}</span>
                <span className="text-sm text-gray-500">‚ÇΩ/–≥–æ–¥</span>
              </div>
            </div>

            {/* –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –≤—ã–≥–æ–¥–∞ –Ω–∞ –≤—Å–µ—Ö */}
            <div className="bg-green-50 rounded-xl p-4">
              <h4 className="text-sm font-semibold text-gray-700 mb-2">–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –≤—ã–≥–æ–¥–∞ –Ω–∞ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å AI-–±–æ—Ç–æ–º, –≤ –≥–æ–¥:</h4>
              <div className="flex items-baseline gap-2">
                <span className="text-2xl font-bold text-green-600">{formatNumber(results.potentialBenefitAll)}</span>
                <span className="text-sm text-gray-500">‚ÇΩ/–≥–æ–¥</span>
              </div>
            </div>

            {/* –°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ */}
            <div className="bg-orange-50 rounded-xl p-4">
              <h4 className="text-sm font-semibold text-gray-700 mb-2">–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ AI-–±–æ—Ç–∞ ¬´–ü–û–î –ö–õ–Æ–ß¬ª:</h4>
              <div className="flex items-baseline gap-2">
                <span className="text-2xl font-bold text-orange-500">500 000</span>
                <span className="text-sm text-gray-500">‚ÇΩ</span>
              </div>
            </div>

            {/* –¢–∞—Ä–∏—Ñ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã */}
            <div className="bg-purple-50 rounded-xl p-4">
              <h4 className="text-sm font-semibold text-gray-700 mb-2">–¢–∞—Ä–∏—Ñ ¬´–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ¬ª, –≤ –≥–æ–¥:</h4>
              <div className="flex items-baseline gap-2">
                <span className="text-2xl font-bold text-purple-500">180 000</span>
                <span className="text-sm text-gray-500">‚ÇΩ/–≥–æ–¥</span>
              </div>
            </div>

            {/* –ò—Ç–æ–≥–æ–≤–∞—è –≤—ã–≥–æ–¥–∞ */}
            <div className="bg-gradient-to-r from-green-50 to-green-100 rounded-xl p-4 border-l-4 border-green-500">
              <div className="flex items-center gap-2 mb-2">
                <span className="text-green-600">‚úì</span>
                <h4 className="text-sm font-semibold text-green-700">–ò—Ç–æ–≥–æ–≤–∞—è –≤—ã–≥–æ–¥–∞ –≤ –≥–æ–¥:</h4>
              </div>
              <div className="flex items-baseline gap-2">
                <span className="text-3xl font-bold text-green-600">{formatNumber(results.finalBenefit)}</span>
                <span className="text-sm text-gray-500">‚ÇΩ/–≥–æ–¥</span>
              </div>
            </div>

            {/* ROI */}
            <div className="bg-gradient-to-r from-purple-100 to-purple-200 rounded-xl p-4 border-l-4 border-purple-500">
              <div className="flex items-center gap-2 mb-2">
                <span className="text-purple-600">‚úì</span>
                <h4 className="text-sm font-semibold text-purple-700">ROI, %:</h4>
              </div>
              <div className="flex items-baseline gap-2">
                <span className="text-3xl font-bold text-purple-600">{results.roi}</span>
                <span className="text-sm text-gray-500">%</span>
              </div>
            </div>

            {/* –î–∞—Ç–∞ —Å—Ç–∞—Ä—Ç–∞ */}
            <div className="bg-gradient-to-r from-blue-100 to-blue-200 rounded-xl p-4 border-l-4 border-blue-500">
              <div className="flex items-center gap-2 mb-2">
                <span className="text-blue-600">‚úì</span>
                <h4 className="text-sm font-semibold text-blue-700">–í–æ–∑–º–æ–∂–Ω—ã–π —Å—Ç–∞—Ä—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≤—ã–≥–æ–¥—ã:</h4>
              </div>
              <div className="text-2xl font-bold text-blue-600">{results.profitStartDate}</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default Calculator;

